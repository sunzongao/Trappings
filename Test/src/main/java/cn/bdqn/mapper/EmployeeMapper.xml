<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.bdqn.mapper.EmployeeMapper">	
	<!-- 查询所有员工（分页加条件——入职时间，员工姓名） -->
	<select id="queryEmployeeByName" parameterType="java.util.Map" resultType="Employee">
		select e.*,d.dName as dName,j.jName as jName from employee e LEFT JOIN
		department d ON e.departmentId=d.departmentId LEFT JOIN job j ON e.jobId=j.jobId
		<trim prefix="where" prefixOverrides="and | or">
			<if test="eName!=null and eName!=''">
				and  e.eName like CONCAT('%',#{eName},'%') 
			</if>
			<if test="begintime!=null and begintime!='' and (endtime==null or endtime=='')">
				and e.entryDate >= #{begintime} 
			</if>
			<if test="begintime!=null and begintime!='' and endtime!=null and endtime!=''">
				and e.entryDate BETWEEN #{begintime} and #{endtime} 
			</if>
			<if test="endtime!=null and endtime!='' and (begintime==null or begintime=='')">
				and e.entryDate <![CDATA[ <= ]]> #{endtime} 
			</if>
		</trim>
		limit #{start},#{end}
	</select>
	<!-- 查询所有员工记录数（分页加条件——入职时间，员工姓名） -->
	<select id="queryCount" parameterType="java.util.Map" resultType="int">
		select count(e.employeeId) from employee e LEFT JOIN
		department d ON e.departmentId=d.departmentId LEFT JOIN job j ON e.jobId=j.jobId
		<trim prefix="where" prefixOverrides="and | or">
			<if test="eName!=null and eName!=''">
				and  e.eName like CONCAT('%',#{eName},'%')
			</if>
			<if test="begintime!=null and begintime!='' and endtime==null">
				and e.entryDate >= #{begintime}
			</if>
			<if test="begintime!=null and begintime!='' and endtime!=null">
				and e.entryDate BETWEEN #{begintime} and #{endtime}
			</if>
			<if test="endtime!=null and endtime!='' and begintime==null">
				and e.entryDate <![CDATA[ <= ]]> #{endtime} 
			</if>
		</trim>
	</select>
	<!-- 根据工号查询员工-->
	<select id="queryById" resultType="Employee" parameterType="String">
		select e.*,d.dName as dName,j.jName as jName from employee e LEFT JOIN
		department d ON e.departmentId=d.departmentId LEFT JOIN job j ON e.jobId=j.jobId
		where e.employeeId=#{employeeId}
	</select>
	<!-- 修改雇员信息 -->
	<update id="updateEmployeeById" parameterType="Employee">
		update 	employee set eName=#{e.eName},eSex=#{e.eSex},birthDate=#{e.birthDate},entryDate=#{e.entryDate},ePhone=#{e.ePhone},eAddress=#{e.eAddress},departmentId=#{e.departmentId},jobId=#{e.jobId},comments=#{e.comments}
		where employeeId=#{e.employeeId}
	</update>
	<!-- 删除员工 -->
	<delete id="deleteEmployeeById">
		delete from employee where employeeId=#{employeeId}
	</delete>
	<!-- 本地提交 -->
	<!-- 新增员工 -->
	<insert id="addEmployee" parameterType="Employee">
		insert into employee(employeeId,eName,eSex,birthDate,entryDate,ePhone,eAddress,departmentId,jobId,comments)
		 values(#{e.employeeId},#{e.eName},#{e.eSex},#{e.birthDate},#{e.entryDate},#{e.ePhone},#{e.eAddress},#{e.departmentId},#{e.jobId},#{e.comments})
	</insert>
</mapper>