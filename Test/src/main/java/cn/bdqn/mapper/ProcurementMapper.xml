<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.bdqn.mapper.ProcurementMapper">

	<resultMap type="Procurement" id="Pmap">
		<id property="procurementId" column="procurementId" />
		<result property="billingTime" column="billingTime" />
		<result property="condition" column="condition" />
		<result property="comments" column="comments" />
		<collection property="dList" ofType="Detailed">
			<id property="id" column="id" />
			<result property="number" column="number" />
			<result property="price" column="price" />
			<association property="commodity" javaType="Commodity">
				<id property="commodityId" column="commodityId" />
				<result property="cName" column="cName" />
				<result property="comments" column="comments" />
				<association property="genre" javaType="Genre">
					<id property="genreId" column="genreId" />
					<result property="gName" column="gName" />
				</association>
				<association property="unit" javaType="Unit">
					<id property="unitId" column="unitId" />
					<result property="uName" column="uName" />
				</association>
				<association property="pigment" javaType="Pigment">
					<id property="pigmentId" column="pigmentId" />
					<result property="pName" column="pName" />
				</association>
				<association property="dimension" javaType="Dimension">
					<id property="dimensionId" column="dimensionId" />
					<result property="dName" column="dName" />
				</association>
				<association property="brand" javaType="Brand">
					<id property="brandId" column="brandId" />
					<result property="bName" column="bName" />
				</association>
			</association>
		</collection>
	</resultMap>



	<select id="queryProcurement" resultMap="Pmap"
		parameterType="map">
		select p.procurementId,p.billingTime,s.sName as sName,sto.stoName as
		stoName,p.userId,p.draftId,usr.surname as draName,u.surname,p.condition,p.comments,p.sign
		from
		procurement p
		left join
		supplier s on p.supplierId=s.supplierId
		left
		join storehouse
		sto on
		p.storehouseId=sto.storehouseId
		left join user u on
		p.userId=u.id
		left join user usr on p.draftId=usr.id
		<trim prefix="where" prefixOverrides="and | or">
			<if test="procurementId!=null and procurementId!=''">
				and p.procurementId like CONCAT('%',#{procurementId},'%')
			</if>
			<if test="condition!=null and condition!='' and condition!=-1 and condition!=-2">
				and p.condition=#{condition}
			</if>
			<if test="condition==-1">
				and p.condition!=2
			</if>
			<if test="condition==-2">
				and p.condition=2 or p.condition=1
			</if>
			<if
				test="begintime!=null and begintime!='' and (endtime==null or endtime=='')">
				and p.billingTime >= #{begintime}
			</if>
			<if
				test="begintime!=null and begintime!='' and endtime!=null and endtime!=''">
				and p.billingTime BETWEEN #{begintime} and #{endtime}
			</if>
			<if
				test="endtime!=null and endtime!='' and (begintime==null or begintime=='')">
				and p.billingTime <![CDATA[ <= ]]>
				#{endtime}
			</if>
		</trim>
		order by p.billingTime desc
		limit #{start},#{end}
	</select>

	<select id="queryCount" resultType="int" parameterType="map">
		select count(1) from
		procurement p
		left join supplier s on p.supplierId=s.supplierId
		left
		join storehouse
		sto on p.storehouseId=sto.storehouseId
		left join user u
		on
		p.userId=u.id
		<trim prefix="where" prefixOverrides="and | or">
			<if test="procurementId!=null and procurementId!=''">
				and p.procurementId like CONCAT('%',#{procurementId},'%')
			</if>
			<if test="condition!=null and condition!='' and condition!=-1 and condition!=-2">
				and p.condition=#{condition}
			</if>
			<if test="condition==-1">
				and p.condition!=2
			</if>
			<if test="condition==-2">
				and p.condition=2 or p.condition=1
			</if>
			<if
				test="begintime!=null and begintime!='' and (endtime==null or endtime=='')">
				and p.billingTime >= #{begintime}
			</if>
			<if
				test="begintime!=null and begintime!='' and endtime!=null and endtime!=''">
				and p.billingTime BETWEEN #{begintime} and #{endtime}
			</if>
			<if
				test="endtime!=null and endtime!='' and (begintime==null or begintime=='')">
				and p.billingTime <![CDATA[ <= ]]>
				#{endtime}
			</if>
		</trim>
	</select>


	<select id="getProcurementByCode" resultMap="Pmap">
		select
		p.procurementId,p.billingTime,s.sName as sName,sto.stoName as
		stoName,u.surname,p.condition,c.commodityId,c.cName as
		cName,b.bName,g.gName,p.comments,p.userId,
		un.uName,pig.pName,dim.dName,d.number,d.price
		from procurement p
		left
		join supplier s on p.supplierId=s.supplierId
		left join storehouse
		sto on
		p.storehouseId=sto.storehouseId
		left join user u on
		p.userId=u.id
		left
		join detailed d on p.procurementId=d.procurementId
		left join commodity
		c on c.commodityId=d.commodityId
		left join brand b
		on
		b.brandId=c.brandId
		left join genre g on g.genreId=c.genreId
		left
		join
		unit un on un.unitId=c.unitId
		left join pigment pig on
		pig.pigmentId=c.pigmentId
		left join dimension dim on
		dim.dimensionId=c.dimensionId
		where
		p.procurementId=#{procurementId}
	</select>


	<insert id="addProcurement" parameterType="Procurement">
		insert into procurement (procurementId,billingTime,supplierId,
		storehouseId,userId,draftId,`condition`,comments)
		values(#{procurementId},#{billingTime},#{supplierId},
		#{storehouseId},#{userId},#{draftId},#{condition},#{comments})
	</insert>


	<update id="updateProcurement" parameterType="Procurement">
		update procurement set storehouseId=#{storehouseId},
		userId=#{userId},comments=#{comments}
		where procurementId=#{procurementId}
	</update>

	<update id="update" parameterType="Procurement">
		update procurement set `condition`=#{condition}
		where procurementId=#{procurementId}
	</update>

	<update id="updateSign" parameterType="Procurement">
		update procurement set sign=#{sign}
		where procurementId=#{procurementId}
	</update>

	<select id="getProcurementById" resultMap="Pmap">
		select 
		p.procurementId,p.billingTime,p.userId,p.storehouseId,s.sName as
		sName,sto.stoName as
		stoName,u.surname,p.condition,c.commodityId,c.cName as
		cName,b.bName,g.gName,p.comments,
		un.uName,pig.pName,dim.dName,d.number,d.price,d.id,p.userId
		from procurement p
		left
		join supplier s on p.supplierId=s.supplierId
		left join storehouse
		sto on
		p.storehouseId=sto.storehouseId
		left join user u on
		p.userId=u.id
		left
		join detailed d on p.procurementId=d.procurementId
		left join commodity
		c on c.commodityId=d.commodityId
		left join brand b
		on
		b.brandId=c.brandId
		left join genre g on g.genreId=c.genreId
		left
		join
		unit un on un.unitId=c.unitId
		left join pigment pig on
		pig.pigmentId=c.pigmentId
		left join dimension dim on
		dim.dimensionId=c.dimensionId
		where
		p.procurementId=#{procurementId}
	</select>

</mapper>