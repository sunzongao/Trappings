<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.bdqn.mapper.RepertoryMapper">
	<select id="queryRepertory" resultType="Repertory"
		parameterType="java.util.Map">
		SELECT
		r.`commodityId`,c.`cName` AS
		repertoryCName,r.`inventory`,r.minimumStock,
		u.`unitId`,b.`brandId`,s.`supplierId`,u.`uName`
		AS
		repertoryUName,b.`bName` AS
		repertoryBName,s.`sName` AS
		repertorySName,s.`sAddress`,s.`sContacts`,s.`sPhone`,s.`comments`,r.`laidTime`,se.`stoName`
		AS repertorySeName,se.`storehouseId` FROM repertory AS r
		LEFT JOIN
		commodity AS c ON
		r.commodityId = c.commodityId
		LEFT JOIN unit AS u ON
		r.unitId =
		u.unitId
		LEFT JOIN brand AS b ON b.`brandId`=r.`brandId`
		LEFT
		JOIN
		supplier AS s ON r.`supplierId`=s.`supplierId`
		LEFT JOIN storehouse
		AS
		se ON r.`storehouseId` = se.`storehouseId`
		<trim prefix="where" prefixOverrides="and | or">
			<if test="storehouseId!=0">
				and r.storehouseId=#{storehouseId}
			</if>
			<if test="unitId!=0">
				and r.unitId=#{unitId}
			</if>
			<if test="brandId!=0">
				and r.brandId=#{brandId}
			</if>
		</trim>
		limit #{startRow},#{pageSize}
	</select>


	<select id="count" resultType="java.lang.Integer"
		parameterType="java.util.Map">
		SELECT
		COUNT(1) FROM repertory AS r
		LEFT JOIN commodity AS c ON
		r.commodityId =
		c.commodityId
		LEFT JOIN unit AS u ON r.unitId =
		u.unitId
		LEFT JOIN
		brand AS b ON b.`brandId`=r.`brandId`
		LEFT JOIN
		supplier AS s
		ON
		r.`supplierId`=s.`supplierId`
		LEFT JOIN storehouse AS
		se ON
		r.`storehouseId` = se.`storehouseId`
		<trim prefix="where" prefixOverrides="and | or">
			<if test="storehouseId!=0">
				and r.storehouseId=#{storehouseId}
			</if>
			<if test="unitId!=0">
				and r.unitId=#{unitId}
			</if>
			<if test="brandId!=0">
				and r.brandId=#{brandId}
			</if>
		</trim>
	</select>


	<insert id="addRepertory" parameterType="Repertory">
		INSERT INTO repertory
		(commodityId,inventory,unitId,
		brandId,supplierId,storehouseId)
		VALUES(#{commodityId},#{inventory},
		#{unitId},#{brandId},#{supplierId},
		#{storehouseId1})
	</insert>

	<delete id="deleteRepertoy" parameterType="Repertory">
		delete from repertory
		where commodityId=#{commodityId} AND inventory=0
	</delete>

	<select id="getById" resultType="Repertory">
		select * from repertory where
		commodityId=#{commodityId}
	</select>

	<update id="updateRepertory" parameterType="Repertory">
		UPDATE
		repertory
		SET
		commodityId= #{commodityId},inventory=
		#{inventory},unitId =
		#{unitId},brandId = #{brandId},supplierId =
		#{supplierId},laidTime =
		#{laidTime},storehouseId = #{storehouseId}
		WHERE commodityId=
		#{commodityId}
	</update>



	<select id="getByStorehouseId" resultType="Repertory"
		parameterType="java.util.Map">
		SELECT
		r.`commodityId`,c.`cName` AS
		repertoryCName,r.`inventory`,r.minimumStock,
		u.`unitId`,b.`brandId`,s.`supplierId`,u.`uName`
		AS
		repertoryUName,b.`bName` AS
		repertoryBName,s.`sName` AS
		repertorySName,s.`sAddress`,s.`sContacts`,s.`sPhone`,s.`comments`,r.`laidTime`,se.`stoName`
		AS repertorySeName,se.`storehouseId` FROM repertory AS r
		LEFT JOIN
		commodity AS c ON
		r.commodityId = c.commodityId
		LEFT JOIN unit AS u ON
		r.unitId =
		u.unitId
		LEFT JOIN brand AS b ON b.`brandId`=r.`brandId`
		LEFT
		JOIN
		supplier AS s ON r.`supplierId`=s.`supplierId`
		LEFT JOIN storehouse
		AS
		se ON r.`storehouseId` = se.`storehouseId`
		<trim prefix="where" prefixOverrides="and | or">
			<if test="storehouseId!=0">
				r.storehouseId=#{storehouseId}
			</if>
		</trim>
		limit #{startRow},#{pageSize}
	</select>

	<select id="count1" resultType="java.lang.Integer"
		parameterType="java.util.Map">
		SELECT
		COUNT(1) FROM repertory AS r
		LEFT JOIN commodity AS c ON
		r.commodityId =
		c.commodityId
		LEFT JOIN unit AS u ON r.unitId =
		u.unitId
		LEFT JOIN
		brand AS b ON b.`brandId`=r.`brandId`
		LEFT JOIN
		supplier AS s
		ON
		r.`supplierId`=s.`supplierId`
		LEFT JOIN storehouse AS
		se ON
		r.`storehouseId` = se.`storehouseId`
		<trim prefix="where" prefixOverrides="and | or">
			<if test="storehouseId!=0">
				r.storehouseId=#{storehouseId}
			</if>
		</trim>
	</select>

	<!--修改最低库存量 -->
	<update id="updateRepertoryAllMinimumStock"
		parameterType="Repertory">
		UPDATE repertory SET minimumStock =#{minimumStock}
	</update>

	<!-- 根据Id和所属仓库查询属性值 -->
	<select id="getByIdAndStorehouseId" resultType="Repertory">
		SELECT * FROM
		repertory WHERE commodityId=#{commodityId} AND
		storehouseId=#{storehouseId}
	</select>



	<!--库存调拨（减） -->
	<update id="updateInventoryAllocation" parameterType="Repertory">
		UPDATE
		repertory SET
		inventory=inventory-#{quantity}
		WHERE
		commodityId=#{commodityId} AND
		storehouseId=#{storehouseId}
	</update>
	<!--库存调拨 （加） -->
	<update id="updateInventoryAllocationJan"
		parameterType="Repertory">
		UPDATE
		repertory SET
		inventory=inventory+#{quantity}
		WHERE
		commodityId=#{commodityId} AND
		storehouseId=#{storehouseId1}
	</update>

	<!-- 修改库存的库存量 从报溢出来的数据加入库存量的数据 -->
	<update id="updateRepertoryInventoryJia"
		parameterType="Repertory">
		UPDATE
		`repertory`
		SET
		`inventory` =
		#{inventory}
		WHERE `commodityId` = #{commodityId}
		AND
		`storehouseId` = #{storehouseId}
	</update>

	<!-- 修改库存的库存量 用库存量减去报损出来的数据 -->
	<update id="updateRepertoryInventoryjian"
		parameterType="Repertory">
		UPDATE
		`repertory`
		SET
		`inventory` =
		#{inventory}
		WHERE `commodityId` = #{commodityId}
		AND
		`storehouseId` = #{storehouseId}
	</update>

</mapper>